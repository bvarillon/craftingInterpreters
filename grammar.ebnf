program     → declaration* EOF ;
declaration → varDecl | statement ;
varDecl     → "var" IDENTIFIER ("=" expression) ";";
statement   → exprStmt | printStmt | block;
block       → "{" declaration* "}" ";" ;
exprStmt    → expression ";" ;
printStmt   → "print" expression ";" ;
expression  → comma_sep ;
comma_sep   → assignment ("," assignment)* ;
assignment  → IDENTIFIER "=" assignment | ternary_op ;
ternary_op  → assignment ("?" assignment ":" assignment)?
equality    → comparison ( ( "!=" | "==" ) comparison )* ;
comparison  → term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term        → factor ( ( "-" | "+" ) factor )* ;
factor      → unary ( ( "/" | "*" ) unary )* ;
unary       → ( "!" | "-" ) unary
                | primary ;
primary     → NUMBER | STRING | "true" | "false" | "nil"
                | "(" expression ")" | IDENTIFIER | missing_op ;
missing_op     → ("+" | "/" | "*" | "<=" | "<" | ">=" | ">" | "!=" | "==") expression ;
